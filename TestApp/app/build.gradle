apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin:'kotlin-android-extensions'
android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            assets.srcDirs = ['assets']
            jni.srcDir 'src/jni'
        }
    }

    defaultConfig {
        applicationId "yll.self.testapp"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //自动编译JNI代码并打成so包，还可以使用nkd build生成so包
        ndk {
            moduleName "myjni"
            abiFilters 'armeabi', 'x86', 'armeabi-v7a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors{
        tencent{}
    }

    /**修复 单元测试报错 Method d in android.util.Log not mocked*/
    testOptions {
        unitTests.returnDefaultValues = true
    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
//    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'

    //lottie
    compile 'com.airbnb.android:lottie:2.0.0'
    /**retrofit*/
    compile 'com.squareup.retrofit2:retrofit:2.0.0'
    /**gson converter*/
    compile 'com.squareup.retrofit2:converter-gson:2.0.0'
    /** RxJavaCallAdapterFactory rxJava和 retrofit 一起使用时需要 */
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'

    /**文末显示...全文*/
    compile(name:'app-release', ext:'aar')

    testCompile 'junit:junit:4.12'

    /**RxJava RxAndroid*/
    compile "io.reactivex:rxjava:1.0.14"
    compile 'io.reactivex:rxandroid:1.0.1'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

}